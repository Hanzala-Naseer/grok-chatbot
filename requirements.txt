# 🧠 Groq Chatbot (Flask + FAISS + Sentence Transformers)

> ⚠️ **Note:** This repository does **not** include the Groq API key.  
> You must create a `.env` file and add your own key as:
>
> ```env
> GROQ_API_KEY=your_groq_api_key_here
> ```
>
> Without this, the app **will not work**.

---

A fast, lightweight chatbot built using Flask, FAISS, Sentence Transformers, and the Groq API. Ideal for local usage and custom chatbot development with semantic search.

## 🔗 Live Repository

[GitHub Repository](https://github.com/Hanzala-Naseer/grok-chatbot)

---

## 🚀 Features

- Fast semantic search using FAISS
- Sentence Transformers for intent matching
- Uses Groq API for real-time LLM responses
- Dockerized for fast deployment
- Clean HTML or Streamlit-based UI
- Minimal memory footprint

---

## 📦 Clone & Run Locally

```bash
git clone https://github.com/Hanzala-Naseer/grok-chatbot.git
cd grok-chatbot
python -m venv venv
source venv/bin/activate  # Windows: venv\Scripts\activate
pip install -r requirements.txt
⚠️ Environment Setup
Create a .env file in the root directory with your Groq API key:

env
Copy
Edit
GROQ_API_KEY=your_groq_api_key_here
🔐 Do not share your .env file or API key publicly.

▶️ Run the Chatbot (Flask)
bash
Copy
Edit
python chat.py
Then open: http://localhost:5000

🐳 Run with Docker
bash
Copy
Edit
docker build -t groq-chatbot .
docker run -p 5000:5000 groq-chatbot
🧰 Tech Stack
Python 3.10+

Flask

FAISS

Sentence Transformers

Groq API

Docker (optional)

Streamlit (optional)

📁 Project Structure
bash
Copy
Edit
grok-chatbot/
│
├── chat.py                      # Main Flask server
├── model.pkl                    # Precomputed vector model
├── expert_soft_chatbot_dataset.json
├── templates/                   # HTML templates (if UI used)
├── static/                      # CSS/JS files
├── .env                         # Not included, must be created
├── requirements.txt
├── Dockerfile
└── README.md


✍️ Author
Hanzala Naseer

# End of README
